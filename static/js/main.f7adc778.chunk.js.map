{"version":3,"sources":["components/QuoteContent.js","components/TweetQuote.js","components/QuoteBox.js","App.js","reportWebVitals.js","index.js"],"names":["QuoteContent","id","class","this","props","content","quote","author","Component","TweetQuote","contentTweet","tweetUrl","encodeURIComponent","href","target","className","QuoteBox","state","currentQuote","getRandomQuote","bind","$","fadeOut","fetch","headers","Accept","then","response","json","data","indexRandom","Math","floor","random","setState","quotes","catch","error","console","log","changeThemeColor","fadeIn","onClick","App","changeColor","colorUsed","document","getElementById","style","background","color","transition","backgroundColor","useEffect","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"0QAaeA,E,4JAVX,WACI,OACI,gCACI,qBAAIC,GAAG,OAAP,UAAc,mBAAGC,MAAM,sBAAvB,IAAiDC,KAAKC,MAAMC,QAAQC,SACpE,oBAAGL,GAAG,SAAN,gBAAmBE,KAAKC,MAAMC,QAAQE,iB,GAL3BC,aCcZC,E,4JAbX,WACI,IAAMC,EAAY,WAAOP,KAAKC,MAAMC,QAAQC,MAA1B,aAAoCH,KAAKC,MAAMC,QAAQE,OAAvD,YACZI,EAAQ,gDAA4CC,mBAAmBF,IAE7E,OACI,sBAAKT,GAAG,eAAR,UACI,mBAAGA,GAAG,cAAcY,KAAMF,EAAUG,OAAO,SAA3C,SAAoD,mBAAGC,UAAU,qBACjE,mBAAGd,GAAG,eAAeY,KAJb,8HAI4BC,OAAO,SAA3C,SAAoD,mBAAGC,UAAU,+B,GARxDP,a,gBC0CVQ,E,kDAtCX,WAAYZ,GAAQ,IAAD,8BACf,cAAMA,IACDa,MAAQ,CACTC,aAAc,IAElB,EAAKC,eAAiB,EAAKA,eAAeC,KAApB,gBALP,E,kDAOnB,WAAkB,IAAD,OACbC,IAAE,SAASC,QAAQ,QACnBD,IAAE,WAAWC,QAAQ,QAErBC,MADmB,yIACD,CAACC,QAAS,CAAEC,OAAQ,sBACrCC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAACG,GACH,IAAMC,EAAcC,KAAKC,MAAsB,IAAhBD,KAAKE,UACpC,EAAKC,SAAS,CAAChB,aAAcW,EAAKM,OAAOL,QAE5CM,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,MAC5BlC,KAAKC,MAAMoC,qB,+BAEf,WACIrC,KAAKgB,mB,gCAET,WACIE,IAAE,SAASoB,OAAO,QAClBpB,IAAE,WAAWoB,OAAO,U,oBAExB,WACI,OACI,sBAAKxC,GAAG,YAAR,UACI,cAAC,EAAD,CAAcI,QAASF,KAAKc,MAAMC,eAClC,wBAAQjB,GAAG,YAAYyC,QAASvC,KAAKgB,eAArC,uBACA,cAAC,EAAD,CAAYd,QAASF,KAAKc,MAAMC,sB,GAjCzBV,a,MCuBRmC,MAxBf,WACE,IAAMC,EAAc,WAClB,IAEMC,EAFY,CAAC,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,WAErGd,KAAKC,MAAsB,GAAhBD,KAAKE,WAE5Ca,SAASC,eAAe,OAAOC,MAAMC,WAAaJ,EAClDC,SAASC,eAAe,OAAOC,MAAME,MAAQL,EAC7CC,SAASC,eAAe,OAAOC,MAAMG,WAAa,sDAElDL,SAASC,eAAe,eAAeC,MAAMI,gBAAkBP,EAC/DC,SAASC,eAAe,gBAAgBC,MAAMI,gBAAkBP,EAChEC,SAASC,eAAe,aAAaC,MAAMI,gBAAkBP,GAK/D,OAHAQ,qBAAU,WACRT,MACC,IAED,qBAAK3C,GAAG,MAAR,SACE,cAAC,EAAD,CAAUuC,iBAAkBI,OCXnBU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB9B,MAAK,YAAkD,IAA/C+B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFlB,SAASC,eAAe,SAM1BO,M","file":"static/js/main.f7adc778.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass QuoteContent extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1 id=\"text\"><i class=\"fas fa-quote-left\"></i> {this.props.content.quote}</h1>\r\n                <p id=\"author\"> - {this.props.content.author}</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default QuoteContent;\r\n","import React, { Component } from 'react';\r\n\r\nclass TweetQuote extends Component {\r\n    render() {\r\n        const contentTweet = `\"${this.props.content.quote}\" ${this.props.content.author} #quotes`;\r\n        const tweetUrl = `https://twitter.com/intent/tweet?text=${encodeURIComponent(contentTweet)}`;\r\n        const faceUrl = \"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fhuyvn502.github.io%2Frandom-quote-machine%2F&amp;src=sdkpreparse\";\r\n        return (\r\n            <div id=\"share-button\">\r\n                <a id=\"tweet-quote\" href={tweetUrl} target=\"_blank\"><i className=\"fab fa-twitter\"></i></a>\r\n                <a id=\"status-quote\" href={faceUrl} target=\"_blank\"><i className=\"fab fa-facebook-f\"></i></a>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TweetQuote;\r\n","import React, { Component } from 'react';\r\nimport QuoteContent from './QuoteContent';\r\nimport TweetQuote from './TweetQuote';\r\nimport $ from 'jquery'\r\n\r\nclass QuoteBox extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currentQuote: {}\r\n        }\r\n        this.getRandomQuote = this.getRandomQuote.bind(this);\r\n    }\r\n    getRandomQuote() {\r\n        $(\"#text\").fadeOut(\"0.7s\");\r\n        $(\"#author\").fadeOut(\"0.7s\");\r\n        const requestUrl = 'https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json';\r\n        fetch(requestUrl, {headers: { Accept: 'application/json'}})\r\n        .then(response => response.json())\r\n        .then((data) => {\r\n            const indexRandom = Math.floor(Math.random() * 102);\r\n            this.setState({currentQuote: data.quotes[indexRandom]});\r\n        })\r\n        .catch(error => console.log(error));\r\n        this.props.changeThemeColor();\r\n    }\r\n    componentDidMount() {\r\n        this.getRandomQuote();\r\n    }\r\n    componentDidUpdate() {\r\n        $(\"#text\").fadeIn(\"0.7s\");\r\n        $(\"#author\").fadeIn(\"0.7s\");\r\n    }\r\n    render() {\r\n        return (\r\n            <div id=\"quote-box\">\r\n                <QuoteContent content={this.state.currentQuote}></QuoteContent>\r\n                <button id=\"new-quote\" onClick={this.getRandomQuote}>New Quote</button>\r\n                <TweetQuote content={this.state.currentQuote}></TweetQuote>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default QuoteBox;\r\n","import { useEffect } from 'react';\nimport QuoteBox from './components/QuoteBox';\nimport './App.scss';\n\nfunction App() {\n  const changeColor = () => {\n    const colorList = ['#16a085','#27ae60','#2c3e50','#f39c12','#e74c3c','#9b59b6','#FB6964','#342224','#472E32','#BDBB99','#77B1A9','#73A857'];\n    // Random color value used for theme of app\n    const colorUsed = colorList[Math.floor(Math.random() * 12)];\n\n    document.getElementById(\"App\").style.background = colorUsed;\n    document.getElementById(\"App\").style.color = colorUsed;\n    document.getElementById(\"App\").style.transition = \"background 0.8s linear 0.2s, color 0.8s linear 0.2s\";\n\n    document.getElementById(\"tweet-quote\").style.backgroundColor = colorUsed;\n    document.getElementById(\"status-quote\").style.backgroundColor = colorUsed;\n    document.getElementById(\"new-quote\").style.backgroundColor = colorUsed;\n  }\n  useEffect(() => {\n    changeColor();\n  }, []);\n  return (\n    <div id=\"App\">\n      <QuoteBox changeThemeColor={changeColor}></QuoteBox>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}